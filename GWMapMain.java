public class GWMapMain {
	public static void testOSMNode() {
		OSMNode n1, n2;

		n1 = new OSMNode(12345);
		n2 = new OSMNode(30.5423, 78.23423, 12345);
		assert(n1.equals(n2));
		n1 = new OSMNode(12347);
		assert(!n1.equals(n2));

		assert(n2.getLon() == 30.5423);
		assert(n2.getLat() == 78.23423);
		assert(!n2.isSignal());
		n2.setAsSignal();
		assert(n2.isSignal());
	}

	public static void testOSMRoads() {
		OSMRoad r1, r2, r3;
		OSMNode[] ns1, ns2, ns3;
		
		ns1    = new OSMNode[4];
		ns1[0] = new OSMNode(1);
		ns1[1] = new OSMNode(2);
		ns1[2] = new OSMNode(3);
		ns1[3] = new OSMNode(4);
		r1     = new OSMRoad("myway", ns1);

		ns3    = new OSMNode[1];
		ns3[0] = new OSMNode(9);
		r3     = new OSMRoad("or", ns3);

		ns2    = new OSMNode[3];
		ns2[0] = new OSMNode(5);
		ns2[1] = new OSMNode(6);
		ns2[2] = new OSMNode(3);
		r2     = new OSMRoad("highway", ns2);

		assert(r1.getNumNodes() == 4 && r2.getNumNodes() == 3);
		assert(r1.getName().equals("myway") && r2.getName().equals("highway"));
		assert(r1.getNode(2).equals(new OSMNode(3)));
		//assert(r1.containsNode(new OSMNode(4)));
		//assert(!r1.containsNode(new OSMNode(6)));
		assert(r1.intersects(r2).equals(new OSMNode(3)));
		assert(r1.intersects(r3) == null);
	}

	public static void testGWMap(String filename, long[] nodeIds, boolean[] trafficLights, String[] streetNames, int[] roadNodes, long[][] intersections, double[] roadLatitudes) {
		GWMap m = new GWMap(filename);

		
		for (int i = 0 ; i < m.numNodes() ; i++) {
			assert(m.getNode(i).getId() == nodeIds[i]);
		}

		for (int i = 0 ; i < m.numNodes() ; i++) {
			assert(m.getNode(i).isSignal() == trafficLights[i]);
		}
      
      //System.out.println(m.numRoads());
		for (int i = 0 ; i < m.numRoads() ; i++) {
			assert(m.getRoad(i).getName().equals(streetNames[i]));
         /*System.out.println(m.getRoad(i).getName());
         System.out.println(streetNames[i]);
         System.out.println(""); */
		} 

		for (int i = 0 ; i < m.numRoads() ; i++) {
			assert(m.getRoad(i).getNumNodes() == roadNodes[i]);
		} 

		for (int i = 0 ; i < m.numRoads() ; i++) {
			for (int j = 0 ; j < m.numRoads() ; j++) {
				OSMNode n = m.getRoad(i).intersects(m.getRoad(j));

				if (n == null) {
					assert(intersections[i][j] == 0);
				} else {
					assert(n.getId() == intersections[i][j]);
				}
			}
		}

		for (int i = 0 ; i < m.getRoad(0).getNumNodes() ; i++) {
			assert(m.getRoad(0).getNode(i).getLat() == roadLatitudes[i]);
		}  
      
	   OSMNode[] bounds = m.getBounds();
      System.out.println(bounds[1].getLon());
      System.out.println(bounds[1].getLat());
	}

	public static void testSmall() {
		long[] nodeIds = {49762264L, 49799834L, 641127585L, 804599379L, 291675382L, 2451171135L, 49777696L, 291675370L, 1443727088L, 49824719L, 49741717L, 49741715L, 49741712L, 49741711L, 3099885755L, 49741710L, 633923936L, 1240476067L, 49741709L, 1240476062L, 49717477L, 1381210497L, 49741695L, 1381307996L, 49777749L, 291675380L, 49777690L, 2383566163L};
		boolean[] trafficLights = {true, true, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false};
		String[] streetNames = {"22nd Street Northwest", "21st Street Northwest", "H Street Northwest"};
		int[] roadNodes = {10, 14, 6};
		long[][] intersections = {
			{641127585L, 0L, 49777696L}, 
			{0L, 49741717L, 49741695L}, 
			{49777696L, 49741695L, 49777749L}
		};
		double[] roadLatitudes = {38.8965641, 38.8973557, 38.8983243, 38.8989461, 38.8992236, 38.8995675, 38.8995735, 38.9002459, 38.9006931, 38.9020773};
		testGWMap("OSMTest.osm", nodeIds, trafficLights, streetNames, roadNodes, intersections, roadLatitudes);
   }

	public static void testLarge() {
		long[] nodeIds = {};
		boolean[] trafficLights = {false, false, true, true, false, false, false, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, false, false, false, false, false, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false};
		String[] streetNames = {"I Street Northwest", "G Street Northwest", "I Street Northwest", "22nd Street Northwest", "I Street Northwest", "23rd Street Northwest", "21st Street Northwest", "Pennsylvania Avenue Northwest", "H Street Northwest"};
		int[] roadNodes = {3, 13, 5, 10, 29, 8, 23, 10, 19};
		long[][] intersections = {
			{49741703L, 0L, 49741703L, 0L, 0L, 0L, 49741703L, 1381307998L, 0L}, 
			{0L, 49762225L, 0L, 49762264L, 0L, 49762286L, 1381307996L, 0L, 0L}, 
			{49741703L, 0L, 49741703L, 1443727088L, 0L, 49793670L, 49741703L, 0L, 0L}, 
			{0L, 49762264L, 1443727088L, 641127585L, 0L, 0L, 0L, 49824719L, 49777696L}, 
			{0L, 0L, 0L, 0L, 49793723L, 0L, 1381210497L, 1381210497L, 0L}, 
			{0L, 49762286L, 49793670L, 0L, 0L, 641127594L, 0L, 0L, 49777712L}, 
			{49741703L, 1381307996L, 49741703L, 0L, 1381210497L, 0L, 49741717L, 1381210497L, 49741695L}, 
			{1381307998L, 0L, 0L, 49824719L, 1381210497L, 0L, 1381210497L, 1381212154L, 0L}, 
			{0L, 0L, 0L, 49777696L, 0L, 49777712L, 49741695L, 0L, 49777749L}
		};
		double[] roadLatitudes = {38.9006944, 38.9007013, 38.9007082};
		testGWMap("SEASatGWU.osm", nodeIds, trafficLights, streetNames, roadNodes, intersections, roadLatitudes);
	}

	public static void main(String[] args) {
		testOSMNode();
		testOSMRoads();
		testSmall();
		testLarge();
	}
}